/**
 * Created by bjhl on 16/1/14.
 */
const fs = require('fs');
const path = require('path');

const dependencyMap = require('../tool/feTree').dependencyMap;
const util = require('../tool/util');
const biz = require('../tool/biz');
const writeTask = require('../tasks/write');
const config = require('../config');
const cssTask = require('../tasks/cssResolve');

// 拷贝path目录下所有文件
const copyFiles = function (pathName) {
    if (fs.statSync(pathName).isDirectory()) {
        // 文件夹
        fs.readdir(pathName, function (error, files) {
            files && files.forEach(function (file, index) {
                var filePath = path.join(pathName, file);
                if (fs.statSync(filePath).isDirectory()) {
                    copyFiles(filePath);
                    return;
                }
                writeFile(pathName, filePath);
            })
        });
    } else {
        writeFile(path.dirname(pathName), pathName);
    }
};

const writeFile = function (pathName, fileName) {
    if (util.isCss(fileName) && path.extname(fileName) !== '.css') {
        cssTask.cssResolve([pathName], util.fixPath(fileName), null, true, true);
        return;
    }
    
    var content = fs.readFileSync(fileName);
    var releaseName = biz.getReleaseName(fileName);
    writeTask.write(releaseName, content);
}

exports.build = function () {
    util.each(dependencyMap, function (dps, pathName) {
        if (util.isOther(pathName)) {
            // 读取HTML文件，替换内容
            var content = fs.readFileSync(pathName);

            var fileName = biz.getReleaseMd5Name(biz.getReleaseName(pathName), content);

            writeTask.write(fileName, content);
        }
    });

    // 其他需要拷贝的文件
    if (config.needCopyFile && Array.isArray(config.needCopyFile)) {
        config.needCopyFile.forEach(function (fileName) {
            copyFiles(path.join(config.projectRoot, fileName));
        });
    }
};
