/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    util = require("util"),
    FragmentStrategy = require(path.join(__dirname, "/../FragmentStrategy"));

/**
 * @auguments cruks-lib-string-builder/FragmentStrategy
 * @constructor
 * @param {*} item element to be dumped
 * @param {Array} data array to be used as parameters list
 * @param {Number} [verbosity] normal by default
 */
function Format(item, data, verbosity) {
    FragmentStrategy.call(this, item, verbosity);

    this.data = data;
}
Format.prototype = Object.create(FragmentStrategy.prototype);

/**
 * @returns {String} string representation of encapsulated item
 */
Format.prototype.toString = function () {
    var args;

    if (this.verbosity.isQuiet()) {
        return "";
    }

    args = [].concat(this.fragment).concat(this.data);

    return util.format.apply(util.format, args);
};

module.exports = Format;
