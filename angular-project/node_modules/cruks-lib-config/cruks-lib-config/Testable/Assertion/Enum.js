/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    ArrayObjectTypeAssertion = require(path.join(__dirname, "/Type/Object/Array")),
    Assertion = require(path.join(__dirname, "/../Assertion")),
    StringBuilder = require("cruks-lib-string-builder").StringBuilder;

/**
 * @auguments cruks-lib-config/Testable/Assertion
 * @constructor
 * @param {*} pattern element to be asserted
 */
function EnumAssertion(pattern) {
    Assertion.call(this);

    this.array = new ArrayObjectTypeAssertion();
    this.pattern = this.array.assert(pattern);
}
EnumAssertion.prototype = Object.create(Assertion.prototype);

EnumAssertion.prototype.getExpectationBaseMessage = function (item, verbosity, isNegated) {
    var message = new StringBuilder(" ", verbosity.createHigher());

    if (isNegated) {
        message.append("not");
    }

    return message.append("member of").appendDump(this.pattern);
};

EnumAssertion.prototype.test = function (item, verbosity, tracker) {
    if (!this.array.has(item).isPassing(this.pattern, verbosity, tracker)) {
        this.throwAssertionFailureException(item, verbosity, tracker);
    }

    return item;
};

module.exports = EnumAssertion;
