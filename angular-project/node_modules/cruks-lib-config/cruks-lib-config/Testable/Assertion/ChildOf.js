/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    Assertion = require(path.join(__dirname, "/../Assertion")),
    InstanceOfAssertion = require(path.join(__dirname, "/InstanceOf")),
    StringBuilder = require("cruks-lib-string-builder").StringBuilder;

/**
 * @auguments cruks-lib-config/Testable/Assertion
 * @constructor
 * @param {Function} Parent parent object constructor
 */
function ChildOfAssertion(Parent) {
    Assertion.call(this);

    this.instanceOf = new InstanceOfAssertion(Parent);
}
ChildOfAssertion.prototype = Object.create(Assertion.prototype);

ChildOfAssertion.prototype.getExpectationBaseMessage = function (item, verbosity, isNegated) {
    var message = new StringBuilder(" ", verbosity);

    if (isNegated) {
        message.append("not");
    }

    return message.append("child of").appendDump(this.instanceOf.Parent);
};

ChildOfAssertion.prototype.test = function (Child, verbosity, tracker) {
    if (!this.instanceOf.isPassing(Child.prototype, verbosity, tracker)) {
        this.throwAssertionFailureException(Child, verbosity, tracker);
    }

    return Child;
};

module.exports = ChildOfAssertion;
