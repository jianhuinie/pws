/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    InstanceOfAssertion = require(path.join(__dirname, "/../../InstanceOf")),
    ObjectTypeAssertion = require(path.join(__dirname, "/../Object")),
    StringBuilder = require("cruks-lib-string-builder").StringBuilder;

/**
 * @auguments cruks-lib-config/Testable/Assertion/Type/Object
 * @constructor
 */
function RegExpObjectTypeAssertion() {
    ObjectTypeAssertion.call(this);

    this.regExpAssertion = new InstanceOfAssertion(RegExp);
    this.typeName = "regular expression";
}
RegExpObjectTypeAssertion.prototype = Object.create(ObjectTypeAssertion.prototype);

RegExpObjectTypeAssertion.prototype.getExpectationBaseMessage = function (item, verbosity, isNegated) {
    var message = new StringBuilder(" ", verbosity);

    if (isNegated) {
        message.append("not");
    }

    return message.append("regular expression");
};

RegExpObjectTypeAssertion.prototype.test = function (item, verbosity, tracker) {
    item = ObjectTypeAssertion.prototype.test.call(this, item, verbosity, tracker);

    return this.regExpAssertion.assert(item, verbosity, tracker);
};

module.exports = RegExpObjectTypeAssertion;
