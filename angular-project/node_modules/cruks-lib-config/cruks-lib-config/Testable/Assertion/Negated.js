/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    Assertion = require(path.join(__dirname, "/../Assertion")),
    InstanceOfAssertion = require(path.join(__dirname, "/InstanceOf")),
    Testable = require(path.join(__dirname, "/../../Testable"));

/**
 * @auguments cruks-lib-config/Testable/Assertion
 * @constructor
 * @param {cruks-lib-config/Testable/Assertion} assertion element to be checked
 */
function NegatedAssertion(assertion) {
    Assertion.call(this);

    this.assertion = (new InstanceOfAssertion(Testable)).assert(assertion);
}
NegatedAssertion.prototype = Object.create(Assertion.prototype);

NegatedAssertion.prototype.getExpectationBaseMessage = function (item, verbosity, isNegated) {
    return this.assertion.getExpectationMessage(item, verbosity, !isNegated);
};

NegatedAssertion.prototype.test = function (item, verbosity, tracker) {
    if (this.assertion.isPassing(item, verbosity, tracker)) {
        this.throwAssertionFailureException(item, verbosity, tracker);
    }

    return item;
};

module.exports = NegatedAssertion;
