/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

var path = require("path"),
    Assertion = require(path.join(__dirname, "/../Assertion")),
    InstanceOfAssertion = require(path.join(__dirname, "/InstanceOf")),
    Testable = require(path.join(__dirname, "/../../Testable")),
    TypeAssertion = require(path.join(__dirname, "/Type"));

/**
 * @auguments cruks-lib-config/Testable/Assertion
 * @constructor
 * @param {cruks-lib-config/Testable/Assertion} assertion element to be checked
 */
function MapAssertion(assertion) {
    Assertion.call(this);

    this.assertion = (new InstanceOfAssertion(Testable)).assert(assertion);
    this.objectAssertion = new TypeAssertion("object");
}
MapAssertion.prototype = Object.create(Assertion.prototype);

MapAssertion.prototype.test = function (item, verbosity, tracker) {
    var property;

    item = this.objectAssertion.test(item, verbosity, tracker);

    for (property in item) {
        if (item.hasOwnProperty(property)) {
            item[property] = this.assertion.assert(item[property], verbosity, tracker.fork(property));
        }
    }

    return item;
};

module.exports = MapAssertion;
