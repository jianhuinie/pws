/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    ChildOfAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/ChildOf");

describe("cruks-lib-config/Testable/Assertion/ChildOf", function () {
    function Parent() {
    }
    function NotChild() {
    }

    function Child() {
        Parent.call(this);
    }
    Child.prototype = Object.create(Parent.prototype);

    describe("#assert()", function () {
        var aa = new ChildOfAssertion(Parent);

        it("asserts that given item represents given type", function () {
            assert.strictEqual(Child, aa.assert(Child));
        });

        it("fails otherwise", function () {
            assert.throws(function () {
                aa.assert(NotChild);
            }, AssertionFailureException, "expected child of (function)\"Parent\" but got (function)\"NotChild\"");
        });
    });
});
