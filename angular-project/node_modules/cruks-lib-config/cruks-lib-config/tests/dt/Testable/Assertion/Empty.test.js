/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    EmptyAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Empty");

describe("cruks-lib-config/Testable/Assertion/Empty", function () {
    describe("#assert()", function () {
        it("accepts empty array", function () {
            var input = [];

            assert.strictEqual(input, new EmptyAssertion().assert(input));
        });

        it("accepts empty object", function () {
            var input = {};

            assert.strictEqual(input, new EmptyAssertion().assert(input));
        });

        it("accepts empty string", function () {
            var input = "";

            assert.strictEqual(input, new EmptyAssertion().assert(input));
        });

        it("accepts null", function () {
            var input = null;

            assert.strictEqual(input, new EmptyAssertion().assert(input));
        });

        it("accepts zeroes", function () {
            assert.strictEqual(+0, new EmptyAssertion().assert(+0));
            assert.strictEqual(-0, new EmptyAssertion().assert(-0));
            assert.strictEqual(0, new EmptyAssertion().assert(0));
        });

        it("throws an error if item is not empty", function () {
            assert.throws(function () {
                new EmptyAssertion().assert(1);
            }, AssertionFailureException, "expected empty element but got (number)\"1\"");
        });
    });
});
