/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    EnumAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Enum");

describe("cruks-lib-config/Testable/Assertion/Enum", function () {
    describe("#assert()", function () {
        var ea = new EnumAssertion([1, 2, 3, 4]);

        it("asserts that given item is a part of enumeration", function () {
            assert.strictEqual(3, ea.assert(3));
        });

        it("fails when item is not a part of enumeration", function () {
            assert.throws(function () {
                ea.assert(5);
            }, AssertionFailureException, "expected member of (array)[(number)\"1\",(number)\"2\",(number)\"3\",(number)\"4\"] but got (number)\"5\"");
        });
    });

    describe("#default()", function () {
        it("validates input against an enum", function () {
            assert.strictEqual("foo", new EnumAssertion(["foo", "bar", "baz"]).default("bar").assert("foo"));
        });

        it("fails if given value is not inside an enum", function () {
            assert.throws(function () {
                assert.strictEqual("bar", new EnumAssertion(["foo", "bar", "baz"]).default("bar").assert("not-in-the-enum"));
            }, AssertionFailureException, "expected member of (array)[(string)\"foo\",(string)\"bar\",(string)\"baz\"] but got (string)\"not-in-the-enum\"");
        });

        it("picks the default value on empty default value", function () {
            assert.strictEqual("bar", new EnumAssertion(["foo", "bar", "baz"]).default("bar").assert(null));
        });

        it("fails if default value is not inside an enum", function () {
            assert.throws(function () {
                new EnumAssertion(["foo", "bar", "baz"]).default("also-not-in-the-enum").assert(null);
            }, AssertionFailureException, "expected member of (array)[(string)\"foo\",(string)\"bar\",(string)\"baz\"] but got (string)\"also-not-in-the-enum\"");
        });

        it("uses default value when available", function () {
            var ea = (new EnumAssertion([1, 2, 3, 4])).default(3);

            assert.strictEqual(3, ea.assert());
        });

        it("fails when no default value is given", function () {
            var ea = new EnumAssertion([1, 2, 3, 4]);

            assert.throws(function () {
                ea.assert();
            }, AssertionFailureException, "expected member of (array)[(number)\"1\",(number)\"2\",(number)\"3\",(number)\"4\"] but got undefined");
        });
    });
});
