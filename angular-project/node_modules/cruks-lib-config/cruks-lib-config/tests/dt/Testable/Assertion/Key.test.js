/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*eslint new-cap: 0 */
/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    KeyAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Key"),
    SymbolShim = require("polacks-shim-es6").Symbol;

describe("cruks-lib-config/Testable/Assertion/Key", function () {
    var ka = new KeyAssertion();

    describe("#assert()", function () {
        it("asserts that given item can be used as a map key", function () {
            assert.strictEqual("test", ka.assert("test"));
        });

        it("accepts symbols", function () {
            var s = SymbolShim();

            assert.strictEqual(s, ka.assert(s));
        });

        it("fails when item cannot be used as a map key", function () {
            assert.throws(function () {
                ka.assert({});
            }, AssertionFailureException, "expected symbol or primitive type but got object");
        });
    });
});
