/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    MapAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Map"),
    NumberTypeAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Type/Number"),
    SchemaAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Schema"),
    StringTypeAssertion = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Testable/Assertion/Type/String");

describe("cruks-lib-config/Testable/Assertion/Schema", function () {
    describe("#assert()", function () {
        it("checks embedded map", function () {
            var input;

            input = {
                "key1": {
                    "key1n1": {
                        "keyXn1": "key1.key1n1.value_keyXn1",
                        "keyXn2": 1
                    }
                },
                "key2": {
                    "key2n1": {
                        "keyXn1": "key2.key2n1.value_keyXn1",
                        "keyXn2": 1
                    }
                }
            };

            assert.strictEqual(input, new MapAssertion(new MapAssertion(new SchemaAssertion({
                "keyXn1": new StringTypeAssertion(),
                "keyXn2": new NumberTypeAssertion()
            }))).assert(input));
        });
    });
});
