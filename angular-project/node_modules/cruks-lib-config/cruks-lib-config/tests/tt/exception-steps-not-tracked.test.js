/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    expect = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/expect");

describe("exception steps not tracked", function () {
    it("tracks exception steps", function () {
        var input,
            schema,
            steps;

        schema = {
            "key1": expect.schema({
                "key1n1": expect.map(expect.schema({
                    "key1n1nXn1": expect.number(),
                    "key1n1nXn2": expect.boolean()
                }))
            })
        };

        input = {
            "key1": {
                "key1n1": [
                    {
                        "key1n1nXn1": 1,
                        "key1n1nXn2": true
                    },
                    {
                        "key1n1nXn1": 2,
                        "key1n1nXn2": "not-a-boolean"
                    }
                ]
            }
        };

        assert.throws(function () {
            try {
                expect.schema(schema).assert(input);
            } catch (e) {
                steps = e.tracker.steps;

                throw e;
            }
        }, AssertionFailureException, "expected boolean but \"key1.key1n1.1.key1n1nXn2\" got (string)\"not-a-boolean\"");

        assert.deepEqual(["key1", "key1n1", "1", "key1n1nXn2"], steps);
    });
});
