/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*global describe: false, it: false */

var assert = require("chai").assert,
    AssertionFailureException = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/Exception/AssertionFailure"),
    expect = require(process.env.PACKAGE_ROOT + "/cruks-lib-config/expect");

describe("empty items are not identified correctly", function () {
    it("identifies empty items correctly", function () {
        var assertConfiguration,
            assertOptionsConfiguration;

        assertOptionsConfiguration = expect.schema({
            "urlList": expect.some([
                expect.string(),
                expect.array().every(expect.string())
            ]),
            "urlRowSelector": expect.string(),
            "baseUrl": expect.optional(expect.string())
        });

        assertConfiguration = expect.schema({
            "options": assertOptionsConfiguration
        });

        assert.throws(function () {
            assertConfiguration.assert({
                "options": {
                    "urlList": [
                        "http://example.com",
                        "http://acme.com", {}
                    ],
                    "urlRowSelector": ".job_offers tr:nth-child(n+2)",
                    "baseUrl": "http://example.com"
                }
            });
        }, AssertionFailureException, "expected string or array (of string) but \"options.urlList\" got array");
    });
});
