/**
 * @license Copyright (c) 2014, Cruks
 * For licensing, see LICENSE
 */

"use strict";

/*eslint no-mixed-requires: 0 */

var assert = require("chai").assert,
    esformatter = require("gulp-esformatter"),
    eslint = require("gulp-eslint"),
    fs = require("fs"),
    gulp = require("gulp"),
    mocha = require("gulp-spawn-mocha"),
    path = require("path"),
    paths;

paths = {
    "gulpfile": __filename,
    "libs": {
        "files": path.join(__dirname, "*-lib-*/**/*.js")
    },
    "tests": {
        "files": path.join(__dirname, "*-lib-*/tests/**/*.test.js")
    },
    "root": __dirname
};

paths.all = [
    paths.gulpfile,
    paths.libs.files
];

gulp.task("beautify", function (done) {
    var esformatterConfigPath = path.join(__dirname, ".esformatter");

    fs.readFile(esformatterConfigPath, function (err, config) {
        assert.ifError(err);

        gulp.src(paths.all)
            .pipe(esformatter(JSON.parse(config.toString("utf8"))))
            .pipe(gulp.dest(paths.root))
            .on("finish", done);
    });
});

gulp.task("lint", ["beautify"], function (done) {
    var eslintConfigPath = path.join(__dirname, ".eslintrc");

    fs.readFile(eslintConfigPath, function (err, config) {
        assert.ifError(err);

        gulp.src(paths.all)
            .pipe(eslint(JSON.parse(config.toString("utf8"))))
            .pipe(eslint.format())
            .on("end", done);
    });
});

gulp.task("test", ["lint"], function (done) {
    gulp.src(paths.tests.files)
        .pipe(mocha({
            "bail": true,
            "env": {
                "PACKAGE_ROOT": __dirname
            },
            "reporter": "dot"
        }))
        .on("finish", done);
});

gulp.task("watch", function () {
    gulp.watch(paths.all, ["default"]);
});

gulp.task("default", ["beautify", "lint", "test"]);
